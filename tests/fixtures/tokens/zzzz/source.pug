.c-usage-documents
	.bi-view
		.left-panel.sidebar-list
			.page-header
				input-with-help
					h2 Active Documents
					template(#help): :markdown
						Active documents allow **unlimited text refreshs**.  Documents are automatically **activated on generation** as long as the limit is not reached.  A separate activation of documents besides text production is not necessary.

						Deactivation of documents becomes effective on the renewal date following the latest text refresh.
			.actions
				bunt-input.search(name="search", placeholder="Search collections by name, id, or language", icon="search", v-model="search")
			.list(v-if="filteredCollectionsByProject", v-scrollbar.y="filteredCollectionsByProject")
				template(v-for="project of filteredCollectionsByProject")
					.project(:class="[`state-${project.state}`]") Project: #[span.name {{ project.name }} ] #[span.state ({{ project.state }})]
					template(v-for="collection of project.filteredCollections")
						.collection.item(,
							@mousedown="selectCollection(project, collection)",
							:class="{active: collection === activeCollection}")
							.text
								.name {{ collection.name }}
								.language.secondary {{ humanize.language(collection.language) }} {{ languageStates[collection.language] }}
							.stats(v-if="!collection.document_statistics")
								| N/A
							bunt-progress-circular(v-else-if="collection.document_statistics.loading", size="small")
							.stats(v-else)
								span.used {{ collection.document_statistics.used || 0 }}
								= " / "
								span.total {{ collection.document_statistics.total || 0 }}
			bunt-progress-circular(v-else, size="huge", :page="true")
		.center-frame
			.empty-help(v-if="!activeCollection")
				:markdown
					Select a collection to manage active documents.
			.center-panel(v-else, :key="activeCollection.id")
				.page-header
					h2 Collection: {{ activeCollection.name }}
					.actions
						bunt-button#btn-deactivate-collection(icon="delete", @click.stop="deactivateCollection(activeCollection.id)", :disabled="!deactivateCollectionAvailable" tooltip="Deactivate all Documents") deactivate all
				.limit-header.over-limit(v-if="overLimit") You've reached your limit of {{ usageLimit }} active documents.  Please #[router-link(:to="{name: 'settings:teams:billing'}") upgrade] your license if you want to activate additional documents.
				.limit-header(v-else-if="unlimited") Your license has no restrictions on the number of documents.
				.limit-header(v-else) Your license allows you to activate another #[span(v-if="freeSlots === 1") document]#[span(v-else) {{ freeSlots }} documents].
				.empty-collection(v-if="!sortedUsages || sortedUsages.length === 0")
					h3 This collection has no active documents.
					p(v-if="!['active', 'deferred-inactive', 'deferred-delete'].includes(activeProjectUsages.state)")
						span(v-if="!['active', 'deferred-inactive', 'deferred-delete'].includes(activeLanguageState)") You need to #[router-link(:to="{name: 'settings:usage:projects'}") activate the project] and #[router-link(:to="{name: 'settings:usage:languages'}") the language] first.
						span(v-else) You need to #[router-link(:to="{name: 'settings:usage:projects'}") activate the project] first.
					p(v-else-if="!['active', 'deferred-inactive', 'deferred-delete'].includes(activeLanguageState)") You need to #[router-link(:to="{name: 'settings:usage:languages'}") activate the language] first.
					p(v-else) Generate a text to activate a document.
				.documents-usage(v-else)
					.header
						.state State
						.uid UID
						.name Name
						.last-successful-generation Last Generation
						.actions
					.tbody(v-scrollbar.y='')
						.usage.table-row(v-for="usage of sortedUsages", :class="[`state-${usage.state}`, {updating: usage.updating, error: usage.error}]", :key="usage.training_id")
							.state
								bunt-progress-circular(v-if="usage.updating", size="small")
							.uid {{ usage.uid }}
							.name {{ usage.name || usage.uid || usage.id }}
							.last-successful-generation {{ $fmt.fromnow(usage.lastSuccessfulGeneration) }}
							.actions
								template(v-if="!usage.updating")
									.placeholder(v-if="['active', 'inactive', 'deferred-inactive'].includes(usage.state)").mdi.mdi-dots-horizontal
									bunt-button(v-if="usage.state === 'active'", :errorMessage="usage.error", tooltipPlacement="left", @click="deactivate(usage)") deactivate
									bunt-button(v-if="['inactive', 'deferred-inactive'].includes(usage.state)", :errorMessage="usage.error", tooltipPlacement="left", @click="activate(usage)") activate
						infinite-scroll(ref="infinite", @load="onInfinite", :loading='loading')
				bunt-progress-circular(v-else, size="huge", :page="true")
