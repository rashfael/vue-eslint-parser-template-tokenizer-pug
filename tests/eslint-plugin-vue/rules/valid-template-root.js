// AUTOGENERATED FROM https://github.com/vuejs/eslint-plugin-vue/blob/8f094200664a2b10bc597016f5486066a174e098/tests/lib/rules/valid-template-root.js @2022-03-19T14:17:43.824Z
/**
 * @author Toru Nagashima
 * @copyright 2017 Toru Nagashima. All rights reserved.
 * See LICENSE file in root directory for full license.
 */
'use strict'

// ------------------------------------------------------------------------------
// Requirements
// ------------------------------------------------------------------------------

const RuleTester = require('eslint').RuleTester
const path = require('path')
const rule = require('../../fixtures/eslint-plugin-vue/lib/rules/valid-template-root')

// ------------------------------------------------------------------------------
// Tests
// ------------------------------------------------------------------------------

const tester = new RuleTester({
  parser: require.resolve('vue-eslint-parser'),
  parserOptions: {  ecmaVersion: 2015 , templateTokenizer: { pug: path.resolve(__dirname, '../../../')}}
})

tester.run('valid-template-root', rule, {
  valid: [
    {
      filename: 'test.vue',
      code: ''
    },
    {
      filename: 'test.vue',
      code: `<template lang="pug">div abc</template>`
    },
    {
      filename: 'test.vue',
      code: `<template lang="pug">
| \n
div abc
| \n
</template>`
    },
    {
      filename: 'test.vue',
      code: `<template lang="pug">
| \n
// comment
| \n
div abc
| \n
</template>`
    },
    {
      filename: 'test.vue',
      code: `<template lang="pug">
| \n
// comment
| \n
div(v-if="foo") abc
| \n
div(v-else) abc
| \n
</template>`
    },
    {
      filename: 'test.vue',
      code: `<template lang="pug">
| \n
// comment
| \n
div(v-if="foo") abc
| \n
div(v-else-if="bar") abc
| \n
div(v-else) abc
| \n
</template>`
    },
    {
      filename: 'test.vue',
      code: `<template lang="pug">
| \n
c1(v-if="1")
| \n
c2(v-else-if="1")
| \n
c3(v-else)
| \n
</template>`
    },
    {
      filename: 'test.vue',
      code: `<template lang="pug">div(v-if="foo")</template>`
    },
    {
      filename: 'test.vue',
      code: `<template lang="pug">
div(v-if="foo")
div(v-else-if="bar")
</template>`
    },
    {
      filename: 'test.vue',
      code: '<template src="foo.html"></template>'
    },
    {
      filename: 'test.vue',
      code: `<template lang="pug">
div
  textarea
  | test
</template>`
    },
    {
      filename: 'test.vue',
      code: `<template lang="pug">
table
  custom-thead
</template>`
    },
    {
      filename: 'test.vue',
      code: '<template lang="pug">test</template>'
    },
    {
      filename: 'test.vue',
      code: `<template lang="pug">
div
div
</template>`
    },
    {
      filename: 'test.vue',
      code: `<template lang="pug">
| \n
div
| \n
div
| \n
</template>`
    },
    {
      filename: 'test.vue',
      code: `<template lang="pug">| {{a b c}}</template>`
    },
    {
      filename: 'test.vue',
      code: `<template lang="pug">
div
| aaaaaa
</template>`
    },
    {
      filename: 'test.vue',
      code: `<template lang="pug">
| aaaaaa
div
</template>`
    },
    {
      filename: 'test.vue',
      code: `<template lang="pug">div(v-for="x in list")</template>`
    },
    {
      filename: 'test.vue',
      code: `<template lang="pug">slot</template>`
    },
    {
      filename: 'test.vue',
      code: `<template lang="pug">template</template>`
    }
  ],
  invalid: [
    {
      filename: 'test.vue',
      code: `<template lang="pug">| \n</template>`,
      errors: ['The template requires child element.']
    },
    {
      filename: 'test.vue',
      code: '<template src="foo.html">abc</template>',
      errors: [
        "The template root with 'src' attribute is required to be empty."
      ]
    },
    {
      filename: 'test.vue',
      code: '<template src="foo.html"><div></div></template>',
      errors: [
        "The template root with 'src' attribute is required to be empty."
      ]
    }
  ]
})
