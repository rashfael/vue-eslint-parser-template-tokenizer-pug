// AUTOGENERATED FROM https://github.com/vuejs/eslint-plugin-vue/blob/8f094200664a2b10bc597016f5486066a174e098/tests/lib/rules/v-on-function-call.js
/**
 * @author Niklas Higi
 */
'use strict'

// ------------------------------------------------------------------------------
// Requirements
// ------------------------------------------------------------------------------

const RuleTester = require('eslint').RuleTester
const path = require('path')
const rule = require('../../fixtures/eslint-plugin-vue/lib/rules/v-on-function-call')

// ------------------------------------------------------------------------------
// Tests
// ------------------------------------------------------------------------------

const tester = new RuleTester({
  parser: require.resolve('vue-eslint-parser'),
  parserOptions: {  ecmaVersion: 2020, sourceType: 'module' , templateTokenizer: { pug: path.resolve(__dirname, '../../../')}}
})

tester.run('v-on-function-call', rule, {
  valid: [
    {
      filename: 'test.vue',
      code: ''
    },
    {
      filename: 'test.vue',
      code: `<template lang="pug">div(@click="foo(123)")</template>`,
      options: ['always']
    },
    {
      filename: 'test.vue',
      code: `<template lang="pug">div(@click="foo(123)")</template>`,
      options: ['never']
    },
    {
      filename: 'test.vue',
      code: `<template lang="pug">div(@click="foo()")</template>`,
      options: ['always']
    },
    {
      filename: 'test.vue',
      code: `<template lang="pug">div(@click="foo")</template>`,
      options: ['never']
    },
    {
      filename: 'test.vue',
      code: `<template lang="pug">div(@click="foo.bar()")</template>`
    },
    {
      filename: 'test.vue',
      code: `<template lang="pug">div(@click="foo.bar()")</template>`,
      options: ['always']
    },
    {
      filename: 'test.vue',
      code: `<template lang="pug">div(@[foo()]="bar")</template>`
    },
    {
      filename: 'test.vue',
      code: `<template lang="pug">div(@[foo]="bar()")</template>`,
      options: ['always']
    },
    {
      filename: 'test.vue',
      code: `<template lang="pug">div(@click="()=>foo.bar()")</template>`
    },
    {
      filename: 'test.vue',
      code: `<template lang="pug">div(@click="()=>foo.bar()")</template>`,
      options: ['always']
    },
    {
      filename: 'test.vue',
      code: `<template lang="pug">
div(@click="
  fn()
  fn()
")
</template>`,
      options: ['never']
    },
    {
      filename: 'test.vue',
      code: `<template lang="pug">div(@click="{}")</template>`,
      options: ['never']
    },
    {
      filename: 'test.vue',
      code: `<template lang="pug">div(@click="{return}")</template>`,
      options: ['never']
    },
    {
      filename: 'test.vue',
      code: `<template lang="pug">div(@click="fn() /* comment */")</template>`,
      options: ['never', { ignoreIncludesComment: true }]
    },
    {
      filename: 'test.vue',
      code: `<template lang="pug">div(@click="foo?.()")</template>`,
      options: ['never']
    },
    {
      filename: 'test.vue',
      code: `<template lang="pug">div(@click="foo()")</template>
      <script>
      export default {
        methods: {
          foo(a) {}
        }
      }
      </script>`,
      options: ['never']
    },
    {
      filename: 'test.vue',
      code: `<template lang="pug">
div(@click="foo()")
div(@click="bar()")
div(@click="baz()")
</template>
      <script>
      export default {
        methods: {
          foo(a,b) {},
          bar(...a) {},
          baz(a = 42) {},
        }
      }
      </script>`,
      options: ['never']
    },
    {
      filename: 'test.vue',
      code: `<template lang="pug">
div(@click="foo()")
div(@click="bar()")
div(@click="baz()")
</template>
      <script>
      export default {
        methods: {
          foo: (a,b) => {},
          bar: (...a) => {},
          baz: (a = 42) => {},
        }
      }
      </script>`,
      options: ['never']
    }
  ],
  invalid: [
    {
      filename: 'test.vue',
      code: `<template lang="pug">div(@click="foo")</template>`,
      output: null,
      errors: [
        "Method calls inside of 'v-on' directives must have parentheses."
      ],
      options: ['always']
    },
    {
      filename: 'test.vue',
      code: `<template lang="pug">div(@click="foo()")</template>`,
      output: `<template lang="pug">div(@click="foo")</template>`,
      errors: [
        "Method calls without arguments inside of 'v-on' directives must not have parentheses."
      ],
      options: ['never']
    },
    {
      filename: 'test.vue',
      code: `<template lang="pug">div(@click="foo( )")</template>`,
      output: `<template lang="pug">div(@click="foo")</template>`,
      errors: [
        "Method calls without arguments inside of 'v-on' directives must not have parentheses."
      ],
      options: ['never']
    },
    {
      filename: 'test.vue',
      code: `<template lang="pug">div(@click="foo(/**/)")</template>`,
      output: null,
      errors: [
        "Method calls without arguments inside of 'v-on' directives must not have parentheses."
      ],
      options: ['never']
    },
    {
      filename: 'test.vue',
      code: `<template lang="pug">
div(@click="/*comment*/fn()")
div(@click="fn()/*comment*/")
div(@click=fn()/*comment*/)
div(@click="fn()// comment
  ")
</template>`,
      output: null,
      errors: [
        "Method calls without arguments inside of 'v-on' directives must not have parentheses.",
        "Method calls without arguments inside of 'v-on' directives must not have parentheses.",
        "Method calls without arguments inside of 'v-on' directives must not have parentheses.",
        "Method calls without arguments inside of 'v-on' directives must not have parentheses."
      ],
      options: ['never']
    },
    {
      filename: 'test.vue',
      code: `<template lang="pug">div(@click="fn();")</template>`,
      output: `<template lang="pug">div(@click="fn")</template>`,
      errors: [
        "Method calls without arguments inside of 'v-on' directives must not have parentheses."
      ],
      options: ['never']
    },
    {
      filename: 'test.vue',
      code: `<template lang="pug">div(@click=fn();)</template>`,
      output: `<template lang="pug">div(@click=fn)</template>`,
      errors: [
        "Method calls without arguments inside of 'v-on' directives must not have parentheses."
      ],
      options: ['never']
    },
    {
      filename: 'test.vue',
      code: `<template lang="pug">
div(@click=" beforeSpace()")
div(@click='afterSpace() ')
</template>`,
      output: `<template lang="pug">
div(@click="beforeSpace")
div(@click='afterSpace')
</template>`,
      errors: [
        "Method calls without arguments inside of 'v-on' directives must not have parentheses.",
        "Method calls without arguments inside of 'v-on' directives must not have parentheses."
      ],
      options: ['never']
    },
    {
      filename: 'test.vue',
      code: `<template lang="pug">div(@click=" &#x66;oo ( ) ")</template>`,
      output: `<template lang="pug">div(@click="&#x66;oo")</template>`,
      errors: [
        "Method calls without arguments inside of 'v-on' directives must not have parentheses."
      ],
      options: ['never']
    },
    {
      filename: 'test.vue',
      code: `<template lang="pug">div(@click="{(fn());;;}")</template>`,
      output: `<template lang="pug">div(@click="fn")</template>`,
      errors: [
        "Method calls without arguments inside of 'v-on' directives must not have parentheses."
      ],
      options: ['never']
    },
    {
      filename: 'test.vue',
      code: `<template lang="pug">
| \r\n
div\r\n@click="foo()"
</template>`,
      output: `<template lang="pug">
| \r\n
div\r\n@click="foo"
</template>`,
      errors: [
        "Method calls without arguments inside of 'v-on' directives must not have parentheses."
      ],
      options: ['never']
    },
    {
      filename: 'test.vue',
      code: `<template lang="pug">div(@click="foo()")</template>
      <script>
      export default {
        methods: {
          foo() {}
        }
      }
      </script>`,
      output: `<template lang="pug">div(@click="foo")</template>
      <script>
      export default {
        methods: {
          foo() {}
        }
      }
      </script>`,
      errors: [
        "Method calls without arguments inside of 'v-on' directives must not have parentheses."
      ],
      options: ['never']
    },
    {
      filename: 'test.vue',
      code: `<template lang="pug">div(@click="foo()")</template>
      <script>
      export default {
        methods: {
          foo: () => {}
        }
      }
      </script>`,
      output: `<template lang="pug">div(@click="foo")</template>
      <script>
      export default {
        methods: {
          foo: () => {}
        }
      }
      </script>`,
      errors: [
        "Method calls without arguments inside of 'v-on' directives must not have parentheses."
      ],
      options: ['never']
    }
  ]
})
