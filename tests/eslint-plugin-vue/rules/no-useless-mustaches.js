// AUTOGENERATED FROM https://github.com/vuejs/eslint-plugin-vue/blob/8f094200664a2b10bc597016f5486066a174e098/tests/lib/rules/no-useless-mustaches.js
/**
 * @author Yosuke Ota
 */
'use strict'

// ------------------------------------------------------------------------------
// Requirements
// ------------------------------------------------------------------------------

const RuleTester = require('eslint').RuleTester
const path = require('path')
const rule = require('../../fixtures/eslint-plugin-vue/lib/rules/no-useless-mustaches.js')

// ------------------------------------------------------------------------------
// Tests
// ------------------------------------------------------------------------------

const tester = new RuleTester({
  parser: require.resolve('vue-eslint-parser'),
  parserOptions: { 
    ecmaVersion: 2020,
    sourceType: 'module'
  , templateTokenizer: { pug: path.resolve(__dirname, '../../../')}}
})

tester.run('no-useless-mustaches', rule, {
  valid: [
    `<template lang="pug">
| foo &apos;foo&apos;
| {{ foo }}

| {{ &apos;foo&apos;||&apos;bar&apos; }}

| {{ 1 }}

| {{  }}

| {{ . }}

| {{ null }}
</template>`,
    {
      code: `<template lang="pug">
| {{ &apos;comment&apos;/*comment*/ }}

| {{ &apos;comment&apos;//comment
| &quot; }}
</template>`,
      options: [{ ignoreIncludesComment: true }]
    },
    {
      code: `<template lang="pug">
| {{ &apos;\\n&apos; }}

| {{ &apos;\\r&apos; }}
</template>`,
      options: [{ ignoreStringEscape: true }]
    }
  ],
  invalid: [
    {
      code: `<template lang="pug">| {{ &apos;foo&apos; }}</template>`,
      output: `<template
      <template lang="pug">| foo</template>`,
      errors: [
        {
          message:
            'Unexpected mustache interpolation with a string literal value.',
          line: 3,
          column: 9,
          endLine: 3
        }
      ]
    },
    {
      code: `<template lang="pug">
| {{ &apos;comment&apos;/*comment*/ }}

| {{ &apos;comment&apos;//comment
| }}
</template>`,
      output: null,
      errors: [
        'Unexpected mustache interpolation with a string literal value.',
        'Unexpected mustache interpolation with a string literal value.'
      ]
    },
    {
      code: `<template lang="pug">
| {{ &apos;\\n&apos; }}

| {{ &apos;\\r&apos; }}
</template>`,
      output: null,
      errors: [
        'Unexpected mustache interpolation with a string literal value.',
        'Unexpected mustache interpolation with a string literal value.'
      ]
    },
    {
      code: `<template lang="pug">
| {{ &apos;&amp;quot;&apos; }}

| {{ \`&amp;quot;&amp;apos;\` }}

| {{ &apos;\\\\&apos; }}

| {{ &apos;\\\\r&apos; }}

| {{ &apos;\\&apos; }}

| {{ \`foo\` }}

| {{ \`foo\${bar}\` }}

| {{ &quot;&amp;apos;&quot; }}

| {{ \`foo\` }}
</template>`,
      output: `<template lang="pug">
| &quot; &quot;&apos; \\ \\r
| {{ &apos;\\&apos; }}
| foo
| {{ \`foo\${bar}\` }}
| &apos; foo
</template>`,
      errors: [
        'Unexpected mustache interpolation with a string literal value.',
        'Unexpected mustache interpolation with a string literal value.',
        'Unexpected mustache interpolation with a string literal value.',
        'Unexpected mustache interpolation with a string literal value.',
        'Unexpected mustache interpolation with a string literal value.',
        'Unexpected mustache interpolation with a string literal value.',
        'Unexpected mustache interpolation with a string literal value.'
      ]
    },
    {
      code: `<template lang="pug">
| {{ &amp;apos;msg&amp;apos; }}

| {{ &amp;quot;msg&amp;quot; }}

| {{ &amp;apos;msg&apos; }}

| {{ &amp;quot;msg&quot; }}

| {{ &apos;msg&amp;apos; }}

| {{ &quot;msg&amp;quot; }}

| {{ &amp;#39;&amp;lt;msg&amp;gt;&amp;apos; }}

| {{ &amp;#34;I&amp;apos;m&amp;#x22; }}

| {{ &quot;no semi&amp;#34 }}
</template>`,
      output: `<template lang="pug">
| msg msg msg msg msg msg &lt;msg&gt; I&apos;m
| {{ &quot;no semi&amp;#34 }}
</template>`,
      errors: [
        'Unexpected mustache interpolation with a string literal value.',
        'Unexpected mustache interpolation with a string literal value.',
        'Unexpected mustache interpolation with a string literal value.',
        'Unexpected mustache interpolation with a string literal value.',
        'Unexpected mustache interpolation with a string literal value.',
        'Unexpected mustache interpolation with a string literal value.',
        'Unexpected mustache interpolation with a string literal value.',
        'Unexpected mustache interpolation with a string literal value.',
        'Unexpected mustache interpolation with a string literal value.'
      ]
    },
    {
      code: `<template lang="pug">
| {{ &apos;I\\&apos;m&apos; }}

| {{ &quot;\\&quot;Happy\\&quot;&quot; }}

| {{ \`backtick \\\` and dollar \\$\` }}

| {{ &quot;\\\\&quot; }}
</template>`,
      output: `<template lang="pug">| I&apos;m &quot;Happy&quot; backtick \` and dollar \$ \\</template>`,
      errors: [
        'Unexpected mustache interpolation with a string literal value.',
        'Unexpected mustache interpolation with a string literal value.',
        'Unexpected mustache interpolation with a string literal value.',
        'Unexpected mustache interpolation with a string literal value.'
      ]
    },
    {
      code: `<template lang="pug">
| {{ \`foo
| bar\` }}
</template>`,
      output: null,
      errors: ['Unexpected mustache interpolation with a string literal value.']
    },
    {
      code: `<template lang="pug">
| {{ &apos;space &apos; }}

| {{ &apos; space&apos; }}

| {{ &apos; space &apos; }}

| {{ &apos;  &apos; }}
</template>`,
      output: null,
      errors: [
        'Unexpected mustache interpolation with a string literal value.',
        'Unexpected mustache interpolation with a string literal value.',
        'Unexpected mustache interpolation with a string literal value.',
        'Unexpected mustache interpolation with a string literal value.'
      ]
    }
  ]
})
